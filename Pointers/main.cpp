#include<iostream>
using namespace std;
using std::cin;
using std::cout;
using std::endl;

#define tab "\t"

//4 Byte = 2 в степени (32) или 2 в (32)
// 4 Byte = 4 GByte
//8 Byte = 2 в степени ( 64)  или 2 (60) * 2(4)
//8 Byte = 4 Ёксабайт 

//#define POINTER_BASICS
//#define MASSIV
#define FUNCTION_INDICATOR



void main()
{
	setlocale(LC_ALL, "");
#ifdef POINTER_BASICS



	int a = 2;
	int* pa = &a; // объ€вление указател€ 'pa', и инициализаци€ его адресом переменной 'a'
	//объ€влениеп указател€. и только при объ€влекнии указател€ "*" показывает что объ€вл€ема€ переменна€  - указатель
	//в остальных случай *  разименовываект указатель.
	cout << a << endl;//вывод значени€ переменной "а"
	cout << &a << endl; // вз€тие адреса переменной "а" пр€мо при выводе 
	cout << pa << endl; // вывод адреса переменной а хран€щегос€ в укахателе "ра"
	cout << *pa << endl; // разыменование указател€ 'pa' и получение значений по адресу в этом указателе
	// *оператор разименовани€ 
	
	pa; // обращение к адресу работа с адресом
	*pa; //побращение ѕќ адресу и работа со значением
	int* pb; //объ€вд€ем указатель без инициализации
	int b = 3; 
	pb = &b;
	//int  - int
//int* - указатель на 'int'
//double  - double
//double* - указатель на double
	cout << *pb << endl;

	/*
----------------------------------------
& - ќператор вз€ти€ адреса (јдрес оператора)
* - ќператор разыменовани€ (ќператор разыменовани€)
----------------------------------------
*/

/* к указател€м можно примен€ть арифметические операции
результат операыии будет зависеть от размера целевого тима.
----------------------------------------
+
-
++
--
----------------------------------------
*/

#endif // POINTER_BASICS

#ifdef MASSIV



	const int n = 5;
	int arr[n] = { 3, 5, 8, 13, 21 };
	cout << arr << endl; // указание на адрес массива
	cout << *arr << endl; //разименовать указатель на адрес массива - выйдет значение нулевого элемента массива
	for (int i = 0; i < n; i++)
	{
		cout << arr + i << tab; // выводит адресаа элементов масива

	}
	cout << endl;
#endif // MASSIV

#ifdef FUNCTION_INDICATOR
	int n;

	int sum(int n,...);//объ€вление функции с неизвестными параметрами 
	{
		int* p = &n;//вз€тие адреса у первого прараметра  "P" - параметры
		int sum = 0;//инициализаци€ значени€ суммы в ноль
		while(*p)//пока встречаютс€ параметры
		{
			sum = sum + (*p) << ; //прибавл€ем к сумме то что вз€ли по адресу –
				p++; // смена текущего адреса на следующий
		}

		cout << sum << endl; //вывод на экран

	}



#endif // FUNCTION_INDICATOR


}